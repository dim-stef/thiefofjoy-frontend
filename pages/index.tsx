/* eslint-disable react/no-unknown-property */
import { useState, useEffect } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useSelector } from "react-redux";
import { RootState } from "../src/store";
import GratitudeJournal from "../src/features/GratitudeJournal";
import StrengthJournal from "../src/features/StrengthJournal";
import StepWrapper from "../src/flat/StepWrapper";
import Cheer from "../src/features/Cheer";
import { motion, AnimatePresence } from "framer-motion";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const { step } = useSelector((state: RootState) => state.progress);
  const [progress, setProgress] = useState(0);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link
          rel="preconnect"
          href="https://fonts.gstatic.com"
          crossOrigin="true"
        />
        <link
          href="https://fonts.googleapis.com/css2?family=Dongle:wght@300;400;700&display=swap"
          rel="stylesheet"
        />
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* <SideBar /> */}
        {/* <Progress value={10} w="100%" maxW="550px" mb={10} borderRadius={10}/> */}
        <PresenceWrapper isVisible={step == 0}>
          <StepWrapper>
            <GratitudeJournal />
          </StepWrapper>
        </PresenceWrapper>
        <PresenceWrapper isVisible={step == 1}>
          <StepWrapper>
            <StrengthJournal />
          </StepWrapper>
        </PresenceWrapper>
        <PresenceWrapper isVisible={step >= 2}>
          <StepWrapper>
            <Cheer />
          </StepWrapper>
        </PresenceWrapper>

        {/* {step == 0 ? <GratitudeJournal/> : <StrengthJournal/>} */}
      </main>

      {/* <footer className={styles.footer}></footer> */}
    </div>
  );
};

type Props = {
  isVisible: boolean;
  children: JSX.Element;
};

function PresenceWrapper({ children, isVisible }: Props) {
  return (
    <AnimatePresence>
      {isVisible && (
        <motion.div
          initial={{
            opacity: 0,
            transform: "scale(0.9)",
            position: "absolute",
          }}
          animate={{ opacity: 1, transform: "scale(1)" }}
          exit={{ opacity: 0, transform: "scale(0.9)" }}
        >
          {children}
        </motion.div>
      )}
    </AnimatePresence>
  );
}

export default Home;
